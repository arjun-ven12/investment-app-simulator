
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.3.1
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "6.3.1",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  name: 'name',
  statusId: 'statusId'
};

exports.Prisma.StatusScalarFieldEnum = {
  id: 'id',
  text: 'text'
};

exports.Prisma.PersonScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  avatar: 'avatar'
};

exports.Prisma.TaskAssignmentScalarFieldEnum = {
  taskId: 'taskId',
  personId: 'personId',
  assignedAt: 'assignedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  symbol: 'symbol',
  name: 'name',
  founded: 'founded',
  employees: 'employees',
  address: 'address',
  city: 'city',
  country: 'country',
  zipCode: 'zipCode',
  phone: 'phone',
  website: 'website',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StockScalarFieldEnum = {
  stock_id: 'stock_id',
  symbol: 'symbol',
  sector: 'sector',
  company_id: 'company_id',
  change: 'change'
};

exports.Prisma.FavoriteStockScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stockId: 'stockId'
};

exports.Prisma.HistPriceScalarFieldEnum = {
  price_id: 'price_id',
  stock_id: 'stock_id',
  date: 'date',
  open_price: 'open_price',
  high_price: 'high_price',
  low_price: 'low_price',
  close_price: 'close_price',
  volume: 'volume'
};

exports.Prisma.LimitOrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stockId: 'stockId',
  quantity: 'quantity',
  limitPrice: 'limitPrice',
  orderType: 'orderType',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TradeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stockId: 'stockId',
  quantity: 'quantity',
  price: 'price',
  totalAmount: 'totalAmount',
  tradeType: 'tradeType',
  tradeDate: 'tradeDate'
};

exports.Prisma.NewsScalarFieldEnum = {
  news_id: 'news_id',
  image_url: 'image_url',
  title: 'title',
  caption: 'caption',
  content: 'content',
  category: 'category',
  tags: 'tags'
};

exports.Prisma.BlogPostScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BlogCommentScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  wallet: 'wallet',
  createdAt: 'createdAt',
  referredById: 'referredById',
  status: 'status',
  userReferralLink: 'userReferralLink',
  username: 'username',
  updatedAt: 'updatedAt',
  name: 'name',
  phoneNumber: 'phoneNumber'
};

exports.Prisma.ReferralScalarFieldEnum = {
  id: 'id',
  referralLink: 'referralLink',
  referralSignups: 'referralSignups',
  successfulReferrals: 'successfulReferrals',
  rewardsExchanged: 'rewardsExchanged',
  creditsEarned: 'creditsEarned',
  userId: 'userId',
  wallet: 'wallet'
};

exports.Prisma.ReferralUsageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  referralId: 'referralId',
  createdAt: 'createdAt'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stockSymbol: 'stockSymbol',
  content: 'content',
  createdAt: 'createdAt',
  viewCount: 'viewCount'
};

exports.Prisma.FavoriteApiScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  symbol: 'symbol'
};

exports.Prisma.GoalScalarFieldEnum = {
  id: 'id',
  title: 'title',
  amount: 'amount',
  deadline: 'deadline',
  createdAt: 'createdAt',
  description: 'description',
  userId: 'userId'
};

exports.Prisma.RedeemByScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dateOrdered: 'dateOrdered',
  rewardId: 'rewardId',
  cardCode: 'cardCode'
};

exports.Prisma.QuizQuestionScalarFieldEnum = {
  id: 'id',
  question: 'question',
  options: 'options',
  correct_answer: 'correct_answer'
};

exports.Prisma.RewardScalarFieldEnum = {
  id: 'id',
  rewardName: 'rewardName',
  rewardDescription: 'rewardDescription',
  cost: 'cost',
  probability: 'probability'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Task: 'Task',
  Status: 'Status',
  Person: 'Person',
  TaskAssignment: 'TaskAssignment',
  Company: 'Company',
  Stock: 'Stock',
  FavoriteStock: 'FavoriteStock',
  HistPrice: 'HistPrice',
  LimitOrder: 'LimitOrder',
  Trade: 'Trade',
  News: 'News',
  BlogPost: 'BlogPost',
  BlogComment: 'BlogComment',
  User: 'User',
  Referral: 'Referral',
  ReferralUsage: 'ReferralUsage',
  Comment: 'Comment',
  FavoriteApi: 'FavoriteApi',
  Goal: 'Goal',
  RedeemBy: 'RedeemBy',
  QuizQuestion: 'QuizQuestion',
  Reward: 'Reward'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
