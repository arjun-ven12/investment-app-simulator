
Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.3.1
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "6.3.1",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  name: 'name',
  statusId: 'statusId'
};

exports.Prisma.StatusScalarFieldEnum = {
  id: 'id',
  text: 'text'
};

exports.Prisma.PersonScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  avatar: 'avatar'
};

exports.Prisma.TaskAssignmentScalarFieldEnum = {
  taskId: 'taskId',
  personId: 'personId',
  assignedAt: 'assignedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  symbol: 'symbol',
  name: 'name',
  founded: 'founded',
  employees: 'employees',
  address: 'address',
  city: 'city',
  country: 'country',
  zipCode: 'zipCode',
  phone: 'phone',
  website: 'website',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StockScalarFieldEnum = {
  stock_id: 'stock_id',
  symbol: 'symbol',
  sector: 'sector',
  company_id: 'company_id',
  change: 'change'
};

exports.Prisma.FavoriteStockScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stockId: 'stockId'
};

exports.Prisma.HistPriceScalarFieldEnum = {
  price_id: 'price_id',
  stock_id: 'stock_id',
  date: 'date',
  open_price: 'open_price',
  high_price: 'high_price',
  low_price: 'low_price',
  close_price: 'close_price',
  volume: 'volume'
};

exports.Prisma.LimitOrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stockId: 'stockId',
  quantity: 'quantity',
  limitPrice: 'limitPrice',
  orderType: 'orderType',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TradeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stockId: 'stockId',
  quantity: 'quantity',
  price: 'price',
  totalAmount: 'totalAmount',
  tradeType: 'tradeType',
  tradeDate: 'tradeDate'
};

exports.Prisma.NewsScalarFieldEnum = {
  news_id: 'news_id',
  image_url: 'image_url',
  title: 'title',
  caption: 'caption',
  content: 'content',
  category: 'category',
  tags: 'tags'
};

exports.Prisma.BlogPostScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BlogCommentScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  wallet: 'wallet',
  createdAt: 'createdAt',
  referredById: 'referredById',
  status: 'status',
  userReferralLink: 'userReferralLink',
  username: 'username',
  updatedAt: 'updatedAt',
  name: 'name',
  phoneNumber: 'phoneNumber'
};

exports.Prisma.ReferralScalarFieldEnum = {
  id: 'id',
  referralLink: 'referralLink',
  referralSignups: 'referralSignups',
  successfulReferrals: 'successfulReferrals',
  rewardsExchanged: 'rewardsExchanged',
  creditsEarned: 'creditsEarned',
  userId: 'userId',
  wallet: 'wallet'
};

exports.Prisma.ReferralUsageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  referralId: 'referralId',
  createdAt: 'createdAt'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stockSymbol: 'stockSymbol',
  content: 'content',
  createdAt: 'createdAt',
  viewCount: 'viewCount'
};

exports.Prisma.FavoriteApiScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  symbol: 'symbol'
};

exports.Prisma.GoalScalarFieldEnum = {
  id: 'id',
  title: 'title',
  amount: 'amount',
  deadline: 'deadline',
  createdAt: 'createdAt',
  description: 'description',
  userId: 'userId'
};

exports.Prisma.RedeemByScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dateOrdered: 'dateOrdered',
  rewardId: 'rewardId',
  cardCode: 'cardCode'
};

exports.Prisma.QuizQuestionScalarFieldEnum = {
  id: 'id',
  question: 'question',
  options: 'options',
  correct_answer: 'correct_answer'
};

exports.Prisma.RewardScalarFieldEnum = {
  id: 'id',
  rewardName: 'rewardName',
  rewardDescription: 'rewardDescription',
  cost: 'cost',
  probability: 'probability'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Task: 'Task',
  Status: 'Status',
  Person: 'Person',
  TaskAssignment: 'TaskAssignment',
  Company: 'Company',
  Stock: 'Stock',
  FavoriteStock: 'FavoriteStock',
  HistPrice: 'HistPrice',
  LimitOrder: 'LimitOrder',
  Trade: 'Trade',
  News: 'News',
  BlogPost: 'BlogPost',
  BlogComment: 'BlogComment',
  User: 'User',
  Referral: 'Referral',
  ReferralUsage: 'ReferralUsage',
  Comment: 'Comment',
  FavoriteApi: 'FavoriteApi',
  Goal: 'Goal',
  RedeemBy: 'RedeemBy',
  QuizQuestion: 'QuizQuestion',
  Reward: 'Reward'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/arjunaravapalli/Downloads/ay2425s2-project-class-2b05-group-checkmate/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "/Users/arjunaravapalli/Downloads/ay2425s2-project-class-2b05-group-checkmate/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.3.1",
  "engineVersion": "605197351a3c8bdd595af2d2a9bc3025bca48ea2",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Task {\n  id       Int              @id @default(autoincrement())\n  name     String\n  statusId Int\n  status   Status           @relation(fields: [statusId], references: [id])\n  persons  TaskAssignment[]\n}\n\nmodel Status {\n  id    Int    @id @default(autoincrement())\n  text  String @unique\n  tasks Task[]\n}\n\nmodel Person {\n  id     Int              @id @default(autoincrement())\n  email  String           @unique\n  name   String\n  avatar String?\n  tasks  TaskAssignment[]\n}\n\nmodel TaskAssignment {\n  taskId     Int\n  personId   Int\n  assignedAt DateTime @default(now())\n  person     Person   @relation(fields: [personId], references: [id], onDelete: Cascade)\n  task       Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)\n\n  @@id([taskId, personId], name: \"assignmentId\")\n}\n\nmodel Company {\n  id          Int       @id @default(autoincrement())\n  symbol      String    @unique\n  name        String\n  founded     Int\n  employees   Int\n  address     String\n  city        String\n  country     String\n  zipCode     String\n  phone       String\n  website     String\n  description String\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime? @updatedAt\n  stocks      Stock[]\n\n  @@index([symbol])\n}\n\nmodel Stock {\n  stock_id      Int             @id @default(autoincrement())\n  symbol        String          @unique @db.VarChar(10)\n  sector        String?         @db.VarChar(100)\n  company_id    Int?\n  change        Int?\n  favoriteStock FavoriteStock[]\n  hist_prices   HistPrice[]\n  limitOrder    LimitOrder[]\n  company       Company?        @relation(fields: [company_id], references: [id])\n  trading       Trade[]\n\n  @@index([symbol])\n}\n\nmodel FavoriteStock {\n  id      Int   @id @default(autoincrement())\n  userId  Int\n  stockId Int\n  stock   Stock @relation(fields: [stockId], references: [stock_id], onDelete: Cascade)\n  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, stockId])\n}\n\nmodel HistPrice {\n  price_id    Int      @id @default(autoincrement())\n  stock_id    Int\n  date        DateTime\n  open_price  Decimal? @db.Decimal(10, 2)\n  high_price  Decimal? @db.Decimal(10, 2)\n  low_price   Decimal? @db.Decimal(10, 2)\n  close_price Decimal  @db.Decimal(10, 2)\n  volume      BigInt?\n  stock       Stock    @relation(fields: [stock_id], references: [stock_id])\n\n  @@unique([stock_id, date])\n}\n\nmodel LimitOrder {\n  id         Int      @id @default(autoincrement())\n  userId     Int\n  stockId    Int\n  quantity   Int\n  limitPrice Decimal  @db.Decimal(10, 2)\n  orderType  String\n  status     String   @default(\"PENDING\")\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  stock      Stock    @relation(fields: [stockId], references: [stock_id], onDelete: Cascade)\n  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Trade {\n  id          Int      @id @default(autoincrement())\n  userId      Int?\n  stockId     Int\n  quantity    Int\n  price       Decimal  @db.Decimal(10, 2)\n  totalAmount Decimal  @db.Decimal(10, 2)\n  tradeType   String\n  tradeDate   DateTime @default(now())\n  stock       Stock    @relation(fields: [stockId], references: [stock_id])\n  user        User?    @relation(fields: [userId], references: [id])\n}\n\nmodel News {\n  news_id   Int      @id @default(autoincrement())\n  image_url String\n  title     String   @db.VarChar(255)\n  caption   String   @db.VarChar(255)\n  content   String\n  category  String   @db.VarChar(100)\n  tags      String[]\n}\n\nmodel BlogPost {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  title      String\n  content    String\n  created_at DateTime @default(now())\n  updated_at DateTime @default(now()) @updatedAt\n\n  user        User          @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  BlogComment BlogComment[]\n}\n\nmodel BlogComment {\n  id         Int      @id @default(autoincrement())\n  post_id    Int\n  user_id    Int\n  comment    String\n  created_at DateTime @default(now())\n  updated_at DateTime @default(now()) @updatedAt\n\n  post BlogPost @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user User     @relation(fields: [user_id], references: [id], onDelete: Cascade)\n}\n\nmodel User {\n  id               Int             @id @default(autoincrement())\n  email            String          @unique\n  password         String\n  wallet           Int             @default(100000)\n  createdAt        DateTime        @default(now())\n  referredById     Int?\n  status           String          @default(\"Sufficient Money\")\n  userReferralLink String?         @unique\n  username         String          @unique\n  updatedAt        DateTime        @updatedAt\n  name             String?\n  phoneNumber      Int?\n  BlogComment      BlogComment[]\n  BlogPost         BlogPost[]\n  Comment          Comment[]\n  FavoriteApi      FavoriteApi[]\n  favoriteStocks   FavoriteStock[]\n  Goal             Goal[]\n  limitOrders      LimitOrder[]\n  RedeemBy         RedeemBy[]\n  referrals        Referral[]      @relation(\"UserReferrals\")\n  referralUsages   ReferralUsage[]\n  trading          Trade[]\n  referredBy       Referral?       @relation(\"UserReferredBy\", fields: [referredById], references: [id], onDelete: Cascade)\n}\n\nmodel Referral {\n  id                  Int             @id @default(autoincrement())\n  referralLink        String          @unique\n  referralSignups     Int             @default(0)\n  successfulReferrals Int             @default(0)\n  rewardsExchanged    Int             @default(0)\n  creditsEarned       Int             @default(0)\n  userId              Int?\n  wallet              Int             @default(100000)\n  user                User?           @relation(\"UserReferrals\", fields: [userId], references: [id], onDelete: Cascade)\n  referralUsages      ReferralUsage[]\n  referredUsers       User[]          @relation(\"UserReferredBy\")\n}\n\nmodel ReferralUsage {\n  id         Int       @id @default(autoincrement())\n  userId     Int?\n  referralId Int?\n  createdAt  DateTime  @default(now())\n  referral   Referral? @relation(fields: [referralId], references: [id], onDelete: Cascade)\n  user       User?     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, referralId])\n}\n\nmodel Comment {\n  id          Int      @id @default(autoincrement())\n  userId      Int\n  stockSymbol String\n  content     String\n  createdAt   DateTime @default(now())\n  viewCount   Int      @default(0)\n  User        User     @relation(fields: [userId], references: [id])\n\n  @@index([stockSymbol])\n}\n\nmodel FavoriteApi {\n  id     Int    @id @default(autoincrement())\n  userId Int\n  symbol String\n  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Goal {\n  id          Int      @id @default(autoincrement())\n  title       String\n  amount      Float\n  deadline    DateTime\n  createdAt   DateTime @default(now())\n  description String?\n  userId      Int\n  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel RedeemBy {\n  id          Int      @id @default(autoincrement())\n  userId      Int\n  dateOrdered DateTime @default(now())\n  rewardId    Int\n  cardCode    String\n  reward      Reward   @relation(fields: [rewardId], references: [id])\n  user        User     @relation(fields: [userId], references: [id])\n\n  @@index([rewardId])\n  @@index([userId])\n}\n\nmodel QuizQuestion {\n  id             Int      @id @default(autoincrement())\n  question       String\n  options        String[]\n  correct_answer Int\n}\n\nmodel Reward {\n  id                Int        @id @default(autoincrement())\n  rewardName        String\n  rewardDescription String\n  cost              Int\n  probability       Decimal    @db.Decimal(5, 3)\n  redeemedBy        RedeemBy[]\n}\n",
  "inlineSchemaHash": "fe6ea2d4ac6558aa8e8cb08fae1ae5efb9707e9d488c95d09322e9007146d4f4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Task\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statusId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"object\",\"type\":\"Status\",\"relationName\":\"StatusToTask\"},{\"name\":\"persons\",\"kind\":\"object\",\"type\":\"TaskAssignment\",\"relationName\":\"TaskToTaskAssignment\"}],\"dbName\":null},\"Status\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"StatusToTask\"}],\"dbName\":null},\"Person\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"TaskAssignment\",\"relationName\":\"PersonToTaskAssignment\"}],\"dbName\":null},\"TaskAssignment\":{\"fields\":[{\"name\":\"taskId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"personId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"person\",\"kind\":\"object\",\"type\":\"Person\",\"relationName\":\"PersonToTaskAssignment\"},{\"name\":\"task\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"TaskToTaskAssignment\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"symbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"founded\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employees\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stocks\",\"kind\":\"object\",\"type\":\"Stock\",\"relationName\":\"CompanyToStock\"}],\"dbName\":null},\"Stock\":{\"fields\":[{\"name\":\"stock_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"symbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"change\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"favoriteStock\",\"kind\":\"object\",\"type\":\"FavoriteStock\",\"relationName\":\"FavoriteStockToStock\"},{\"name\":\"hist_prices\",\"kind\":\"object\",\"type\":\"HistPrice\",\"relationName\":\"HistPriceToStock\"},{\"name\":\"limitOrder\",\"kind\":\"object\",\"type\":\"LimitOrder\",\"relationName\":\"LimitOrderToStock\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToStock\"},{\"name\":\"trading\",\"kind\":\"object\",\"type\":\"Trade\",\"relationName\":\"StockToTrade\"}],\"dbName\":null},\"FavoriteStock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stockId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stock\",\"kind\":\"object\",\"type\":\"Stock\",\"relationName\":\"FavoriteStockToStock\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FavoriteStockToUser\"}],\"dbName\":null},\"HistPrice\":{\"fields\":[{\"name\":\"price_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stock_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"open_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"high_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"low_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"close_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"volume\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"stock\",\"kind\":\"object\",\"type\":\"Stock\",\"relationName\":\"HistPriceToStock\"}],\"dbName\":null},\"LimitOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stockId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"limitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"orderType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stock\",\"kind\":\"object\",\"type\":\"Stock\",\"relationName\":\"LimitOrderToStock\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LimitOrderToUser\"}],\"dbName\":null},\"Trade\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stockId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"tradeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tradeDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stock\",\"kind\":\"object\",\"type\":\"Stock\",\"relationName\":\"StockToTrade\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TradeToUser\"}],\"dbName\":null},\"News\":{\"fields\":[{\"name\":\"news_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"image_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"BlogPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlogPostToUser\"},{\"name\":\"BlogComment\",\"kind\":\"object\",\"type\":\"BlogComment\",\"relationName\":\"BlogCommentToBlogPost\"}],\"dbName\":null},\"BlogComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"BlogCommentToBlogPost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlogCommentToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wallet\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"referredById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userReferralLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"BlogComment\",\"kind\":\"object\",\"type\":\"BlogComment\",\"relationName\":\"BlogCommentToUser\"},{\"name\":\"BlogPost\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"BlogPostToUser\"},{\"name\":\"Comment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"},{\"name\":\"FavoriteApi\",\"kind\":\"object\",\"type\":\"FavoriteApi\",\"relationName\":\"FavoriteApiToUser\"},{\"name\":\"favoriteStocks\",\"kind\":\"object\",\"type\":\"FavoriteStock\",\"relationName\":\"FavoriteStockToUser\"},{\"name\":\"Goal\",\"kind\":\"object\",\"type\":\"Goal\",\"relationName\":\"GoalToUser\"},{\"name\":\"limitOrders\",\"kind\":\"object\",\"type\":\"LimitOrder\",\"relationName\":\"LimitOrderToUser\"},{\"name\":\"RedeemBy\",\"kind\":\"object\",\"type\":\"RedeemBy\",\"relationName\":\"RedeemByToUser\"},{\"name\":\"referrals\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"UserReferrals\"},{\"name\":\"referralUsages\",\"kind\":\"object\",\"type\":\"ReferralUsage\",\"relationName\":\"ReferralUsageToUser\"},{\"name\":\"trading\",\"kind\":\"object\",\"type\":\"Trade\",\"relationName\":\"TradeToUser\"},{\"name\":\"referredBy\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"UserReferredBy\"}],\"dbName\":null},\"Referral\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referralLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referralSignups\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"successfulReferrals\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rewardsExchanged\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsEarned\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"wallet\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserReferrals\"},{\"name\":\"referralUsages\",\"kind\":\"object\",\"type\":\"ReferralUsage\",\"relationName\":\"ReferralToReferralUsage\"},{\"name\":\"referredUsers\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserReferredBy\"}],\"dbName\":null},\"ReferralUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referralId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"referral\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"ReferralToReferralUsage\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReferralUsageToUser\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stockSymbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"}],\"dbName\":null},\"FavoriteApi\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"symbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FavoriteApiToUser\"}],\"dbName\":null},\"Goal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GoalToUser\"}],\"dbName\":null},\"RedeemBy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dateOrdered\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rewardId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cardCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reward\",\"kind\":\"object\",\"type\":\"Reward\",\"relationName\":\"RedeemByToReward\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RedeemByToUser\"}],\"dbName\":null},\"QuizQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"correct_answer\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Reward\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rewardName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rewardDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cost\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"probability\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"redeemedBy\",\"kind\":\"object\",\"type\":\"RedeemBy\",\"relationName\":\"RedeemByToReward\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine 
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

